// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backend.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReturnCode int32

const (
	ReturnCode_SUCCESS ReturnCode = 0
	ReturnCode_FAILURE ReturnCode = 1
)

var ReturnCode_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
}

var ReturnCode_value = map[string]int32{
	"SUCCESS": 0,
	"FAILURE": 1,
}

func (x ReturnCode) String() string {
	return proto.EnumName(ReturnCode_name, int32(x))
}

func (ReturnCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Header struct {
	Header               []string `protobuf:"bytes,1,rep,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{1}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetHeader() []string {
	if m != nil {
		return m.Header
	}
	return nil
}

type ProtoError struct {
	ErrType              uint32   `protobuf:"varint,1,opt,name=err_type,json=errType,proto3" json:"err_type,omitempty"`
	ErrMsg               string   `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
	ErrCode              int64    `protobuf:"varint,3,opt,name=err_code,json=errCode,proto3" json:"err_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProtoError) Reset()         { *m = ProtoError{} }
func (m *ProtoError) String() string { return proto.CompactTextString(m) }
func (*ProtoError) ProtoMessage()    {}
func (*ProtoError) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{2}
}

func (m *ProtoError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoError.Unmarshal(m, b)
}
func (m *ProtoError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoError.Marshal(b, m, deterministic)
}
func (m *ProtoError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoError.Merge(m, src)
}
func (m *ProtoError) XXX_Size() int {
	return xxx_messageInfo_ProtoError.Size(m)
}
func (m *ProtoError) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoError.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoError proto.InternalMessageInfo

func (m *ProtoError) GetErrType() uint32 {
	if m != nil {
		return m.ErrType
	}
	return 0
}

func (m *ProtoError) GetErrMsg() string {
	if m != nil {
		return m.ErrMsg
	}
	return ""
}

func (m *ProtoError) GetErrCode() int64 {
	if m != nil {
		return m.ErrCode
	}
	return 0
}

type Connection struct {
	// RemoteAddr is the network address that sent the request.
	RemoteAddr           string   `protobuf:"bytes,1,opt,name=remote_addr,json=remoteAddr,proto3" json:"remote_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{3}
}

func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

type Request struct {
	Id                   string             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Operation            string             `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	Namespace            string             `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Token                string             `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Authorized           []byte             `protobuf:"bytes,5,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Data                 []byte             `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Connection           *Connection        `protobuf:"bytes,7,opt,name=connection,proto3" json:"connection,omitempty"`
	Headers              map[string]*Header `protobuf:"bytes,8,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{4}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Request) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

func (m *Request) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Request) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Request) GetAuthorized() []byte {
	if m != nil {
		return m.Authorized
	}
	return nil
}

func (m *Request) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Request) GetConnection() *Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *Request) GetHeaders() map[string]*Header {
	if m != nil {
		return m.Headers
	}
	return nil
}

// HandleRequestArgs is the args for HandleRequest method.
type HandleRequestArgs struct {
	StorageId            uint32   `protobuf:"varint,1,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	Request              *Request `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandleRequestArgs) Reset()         { *m = HandleRequestArgs{} }
func (m *HandleRequestArgs) String() string { return proto.CompactTextString(m) }
func (*HandleRequestArgs) ProtoMessage()    {}
func (*HandleRequestArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{5}
}

func (m *HandleRequestArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleRequestArgs.Unmarshal(m, b)
}
func (m *HandleRequestArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleRequestArgs.Marshal(b, m, deterministic)
}
func (m *HandleRequestArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleRequestArgs.Merge(m, src)
}
func (m *HandleRequestArgs) XXX_Size() int {
	return xxx_messageInfo_HandleRequestArgs.Size(m)
}
func (m *HandleRequestArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleRequestArgs.DiscardUnknown(m)
}

var xxx_messageInfo_HandleRequestArgs proto.InternalMessageInfo

func (m *HandleRequestArgs) GetStorageId() uint32 {
	if m != nil {
		return m.StorageId
	}
	return 0
}

func (m *HandleRequestArgs) GetRequest() *Request {
	if m != nil {
		return m.Request
	}
	return nil
}

type HandlerResponse struct {
	ResultCode           int64              `protobuf:"varint,1,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
	ResultMsg            string             `protobuf:"bytes,2,opt,name=result_msg,json=resultMsg,proto3" json:"result_msg,omitempty"`
	Data                 string             `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Headers              map[string]*Header `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HandlerResponse) Reset()         { *m = HandlerResponse{} }
func (m *HandlerResponse) String() string { return proto.CompactTextString(m) }
func (*HandlerResponse) ProtoMessage()    {}
func (*HandlerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{6}
}

func (m *HandlerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandlerResponse.Unmarshal(m, b)
}
func (m *HandlerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandlerResponse.Marshal(b, m, deterministic)
}
func (m *HandlerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandlerResponse.Merge(m, src)
}
func (m *HandlerResponse) XXX_Size() int {
	return xxx_messageInfo_HandlerResponse.Size(m)
}
func (m *HandlerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HandlerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HandlerResponse proto.InternalMessageInfo

func (m *HandlerResponse) GetResultCode() int64 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

func (m *HandlerResponse) GetResultMsg() string {
	if m != nil {
		return m.ResultMsg
	}
	return ""
}

func (m *HandlerResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *HandlerResponse) GetHeaders() map[string]*Header {
	if m != nil {
		return m.Headers
	}
	return nil
}

// HandleRequestReply is the reply for HandleRequest method.
type HandleRequestReply struct {
	Response             *HandlerResponse `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Err                  *ProtoError      `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *HandleRequestReply) Reset()         { *m = HandleRequestReply{} }
func (m *HandleRequestReply) String() string { return proto.CompactTextString(m) }
func (*HandleRequestReply) ProtoMessage()    {}
func (*HandleRequestReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{7}
}

func (m *HandleRequestReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandleRequestReply.Unmarshal(m, b)
}
func (m *HandleRequestReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandleRequestReply.Marshal(b, m, deterministic)
}
func (m *HandleRequestReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandleRequestReply.Merge(m, src)
}
func (m *HandleRequestReply) XXX_Size() int {
	return xxx_messageInfo_HandleRequestReply.Size(m)
}
func (m *HandleRequestReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HandleRequestReply.DiscardUnknown(m)
}

var xxx_messageInfo_HandleRequestReply proto.InternalMessageInfo

func (m *HandleRequestReply) GetResponse() *HandlerResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *HandleRequestReply) GetErr() *ProtoError {
	if m != nil {
		return m.Err
	}
	return nil
}

// InitializeArgs is the args for Initialize method.
type InitializeArgs struct {
	Params               []byte   `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitializeArgs) Reset()         { *m = InitializeArgs{} }
func (m *InitializeArgs) String() string { return proto.CompactTextString(m) }
func (*InitializeArgs) ProtoMessage()    {}
func (*InitializeArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{8}
}

func (m *InitializeArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitializeArgs.Unmarshal(m, b)
}
func (m *InitializeArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitializeArgs.Marshal(b, m, deterministic)
}
func (m *InitializeArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitializeArgs.Merge(m, src)
}
func (m *InitializeArgs) XXX_Size() int {
	return xxx_messageInfo_InitializeArgs.Size(m)
}
func (m *InitializeArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_InitializeArgs.DiscardUnknown(m)
}

var xxx_messageInfo_InitializeArgs proto.InternalMessageInfo

func (m *InitializeArgs) GetParams() []byte {
	if m != nil {
		return m.Params
	}
	return nil
}

// InitializeReply is the reply for Initialize method.
type InitializeReply struct {
	Err                  *ProtoError `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *InitializeReply) Reset()         { *m = InitializeReply{} }
func (m *InitializeReply) String() string { return proto.CompactTextString(m) }
func (*InitializeReply) ProtoMessage()    {}
func (*InitializeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{9}
}

func (m *InitializeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitializeReply.Unmarshal(m, b)
}
func (m *InitializeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitializeReply.Marshal(b, m, deterministic)
}
func (m *InitializeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitializeReply.Merge(m, src)
}
func (m *InitializeReply) XXX_Size() int {
	return xxx_messageInfo_InitializeReply.Size(m)
}
func (m *InitializeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_InitializeReply.DiscardUnknown(m)
}

var xxx_messageInfo_InitializeReply proto.InternalMessageInfo

func (m *InitializeReply) GetErr() *ProtoError {
	if m != nil {
		return m.Err
	}
	return nil
}

// SetupArgs is the args for Setup method.
type SetupArgs struct {
	BrokerId             uint32            `protobuf:"varint,1,opt,name=broker_id,json=brokerId,proto3" json:"broker_id,omitempty"`
	Config               map[string]string `protobuf:"bytes,2,rep,name=Config,proto3" json:"Config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BackendUUID          string            `protobuf:"bytes,3,opt,name=backendUUID,proto3" json:"backendUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetupArgs) Reset()         { *m = SetupArgs{} }
func (m *SetupArgs) String() string { return proto.CompactTextString(m) }
func (*SetupArgs) ProtoMessage()    {}
func (*SetupArgs) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{10}
}

func (m *SetupArgs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupArgs.Unmarshal(m, b)
}
func (m *SetupArgs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupArgs.Marshal(b, m, deterministic)
}
func (m *SetupArgs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupArgs.Merge(m, src)
}
func (m *SetupArgs) XXX_Size() int {
	return xxx_messageInfo_SetupArgs.Size(m)
}
func (m *SetupArgs) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupArgs.DiscardUnknown(m)
}

var xxx_messageInfo_SetupArgs proto.InternalMessageInfo

func (m *SetupArgs) GetBrokerId() uint32 {
	if m != nil {
		return m.BrokerId
	}
	return 0
}

func (m *SetupArgs) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *SetupArgs) GetBackendUUID() string {
	if m != nil {
		return m.BackendUUID
	}
	return ""
}

// SetupReply is the reply for Setup method.
type SetupReply struct {
	Err                  string   `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupReply) Reset()         { *m = SetupReply{} }
func (m *SetupReply) String() string { return proto.CompactTextString(m) }
func (*SetupReply) ProtoMessage()    {}
func (*SetupReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{11}
}

func (m *SetupReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupReply.Unmarshal(m, b)
}
func (m *SetupReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupReply.Marshal(b, m, deterministic)
}
func (m *SetupReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupReply.Merge(m, src)
}
func (m *SetupReply) XXX_Size() int {
	return xxx_messageInfo_SetupReply.Size(m)
}
func (m *SetupReply) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupReply.DiscardUnknown(m)
}

var xxx_messageInfo_SetupReply proto.InternalMessageInfo

func (m *SetupReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

// TypeReply is the reply for the Type method.
type TypeReply struct {
	Type                 uint32   `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TypeReply) Reset()         { *m = TypeReply{} }
func (m *TypeReply) String() string { return proto.CompactTextString(m) }
func (*TypeReply) ProtoMessage()    {}
func (*TypeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{12}
}

func (m *TypeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypeReply.Unmarshal(m, b)
}
func (m *TypeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypeReply.Marshal(b, m, deterministic)
}
func (m *TypeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypeReply.Merge(m, src)
}
func (m *TypeReply) XXX_Size() int {
	return xxx_messageInfo_TypeReply.Size(m)
}
func (m *TypeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_TypeReply.DiscardUnknown(m)
}

var xxx_messageInfo_TypeReply proto.InternalMessageInfo

func (m *TypeReply) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type VersionReply struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VersionReply) Reset()         { *m = VersionReply{} }
func (m *VersionReply) String() string { return proto.CompactTextString(m) }
func (*VersionReply) ProtoMessage()    {}
func (*VersionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{13}
}

func (m *VersionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VersionReply.Unmarshal(m, b)
}
func (m *VersionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VersionReply.Marshal(b, m, deterministic)
}
func (m *VersionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VersionReply.Merge(m, src)
}
func (m *VersionReply) XXX_Size() int {
	return xxx_messageInfo_VersionReply.Size(m)
}
func (m *VersionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_VersionReply.DiscardUnknown(m)
}

var xxx_messageInfo_VersionReply proto.InternalMessageInfo

func (m *VersionReply) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type NameReply struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameReply) Reset()         { *m = NameReply{} }
func (m *NameReply) String() string { return proto.CompactTextString(m) }
func (*NameReply) ProtoMessage()    {}
func (*NameReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_5ab9ba5b8d8b2ba5, []int{14}
}

func (m *NameReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameReply.Unmarshal(m, b)
}
func (m *NameReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameReply.Marshal(b, m, deterministic)
}
func (m *NameReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameReply.Merge(m, src)
}
func (m *NameReply) XXX_Size() int {
	return xxx_messageInfo_NameReply.Size(m)
}
func (m *NameReply) XXX_DiscardUnknown() {
	xxx_messageInfo_NameReply.DiscardUnknown(m)
}

var xxx_messageInfo_NameReply proto.InternalMessageInfo

func (m *NameReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("proto.ReturnCode", ReturnCode_name, ReturnCode_value)
	proto.RegisterType((*Empty)(nil), "proto.Empty")
	proto.RegisterType((*Header)(nil), "proto.Header")
	proto.RegisterType((*ProtoError)(nil), "proto.ProtoError")
	proto.RegisterType((*Connection)(nil), "proto.Connection")
	proto.RegisterType((*Request)(nil), "proto.Request")
	proto.RegisterMapType((map[string]*Header)(nil), "proto.Request.HeadersEntry")
	proto.RegisterType((*HandleRequestArgs)(nil), "proto.HandleRequestArgs")
	proto.RegisterType((*HandlerResponse)(nil), "proto.HandlerResponse")
	proto.RegisterMapType((map[string]*Header)(nil), "proto.HandlerResponse.HeadersEntry")
	proto.RegisterType((*HandleRequestReply)(nil), "proto.HandleRequestReply")
	proto.RegisterType((*InitializeArgs)(nil), "proto.InitializeArgs")
	proto.RegisterType((*InitializeReply)(nil), "proto.InitializeReply")
	proto.RegisterType((*SetupArgs)(nil), "proto.SetupArgs")
	proto.RegisterMapType((map[string]string)(nil), "proto.SetupArgs.ConfigEntry")
	proto.RegisterType((*SetupReply)(nil), "proto.SetupReply")
	proto.RegisterType((*TypeReply)(nil), "proto.TypeReply")
	proto.RegisterType((*VersionReply)(nil), "proto.VersionReply")
	proto.RegisterType((*NameReply)(nil), "proto.NameReply")
}

func init() {
	proto.RegisterFile("backend.proto", fileDescriptor_5ab9ba5b8d8b2ba5)
}

var fileDescriptor_5ab9ba5b8d8b2ba5 = []byte{
	// 849 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdb, 0x8e, 0xe3, 0x44,
	0x10, 0xc5, 0xb9, 0x39, 0x2e, 0x27, 0xb3, 0x99, 0x66, 0x09, 0xde, 0xec, 0xb2, 0x6b, 0x79, 0xc4,
	0xc8, 0x42, 0x4b, 0x24, 0xc2, 0x45, 0x0b, 0x2b, 0x1e, 0x66, 0x33, 0x41, 0x13, 0x09, 0x10, 0xea,
	0x10, 0x1e, 0x00, 0x29, 0xea, 0x89, 0x8b, 0x8c, 0x95, 0xf8, 0x42, 0xdb, 0x19, 0x29, 0xf3, 0x27,
	0x7c, 0x0b, 0xbf, 0xc1, 0x7f, 0xf0, 0x0b, 0xa8, 0x2f, 0x8e, 0xed, 0x61, 0xe0, 0x6d, 0x9f, 0xd2,
	0x75, 0xe9, 0x53, 0x55, 0xe7, 0x94, 0x3b, 0xd0, 0xbf, 0x66, 0xeb, 0x2d, 0xc6, 0xc1, 0x38, 0xe5,
	0x49, 0x9e, 0x90, 0xb6, 0xfc, 0x19, 0xf5, 0xb2, 0xf5, 0x0d, 0x46, 0x4c, 0x39, 0x3d, 0x13, 0xda,
	0xb3, 0x28, 0xcd, 0x0f, 0x9e, 0x0b, 0x9d, 0x2b, 0x64, 0x01, 0x72, 0x32, 0x84, 0xce, 0x8d, 0x3c,
	0x39, 0x86, 0xdb, 0xf4, 0x2d, 0xaa, 0x2d, 0xef, 0x17, 0x80, 0x1f, 0xc4, 0x9d, 0x19, 0xe7, 0x09,
	0x27, 0x4f, 0xa0, 0x8b, 0x9c, 0xaf, 0xf2, 0x43, 0x8a, 0x8e, 0xe1, 0x1a, 0x7e, 0x9f, 0x9a, 0xc8,
	0xf9, 0x8f, 0x87, 0x14, 0xc9, 0xfb, 0x20, 0x8e, 0xab, 0x28, 0xdb, 0x38, 0x0d, 0xd7, 0x10, 0x08,
	0xc8, 0xf9, 0x77, 0xd9, 0xa6, 0xb8, 0xb3, 0x4e, 0x02, 0x74, 0x9a, 0xae, 0xe1, 0x37, 0xe5, 0x9d,
	0x69, 0x12, 0xa0, 0xf7, 0x31, 0xc0, 0x34, 0x89, 0x63, 0x5c, 0xe7, 0x61, 0x12, 0x93, 0x17, 0x60,
	0x73, 0x8c, 0x92, 0x1c, 0x57, 0x2c, 0x08, 0xb8, 0xc4, 0xb7, 0x28, 0x28, 0xd7, 0x45, 0x10, 0x70,
	0xef, 0xaf, 0x06, 0x98, 0x14, 0x7f, 0xdf, 0x63, 0x96, 0x93, 0x13, 0x68, 0x84, 0x81, 0xce, 0x69,
	0x84, 0x01, 0x79, 0x06, 0x56, 0x92, 0x22, 0x67, 0x02, 0x49, 0x37, 0x50, 0x3a, 0x44, 0x34, 0x66,
	0x11, 0x66, 0x29, 0x5b, 0xab, 0x26, 0x2c, 0x5a, 0x3a, 0xc8, 0x63, 0x68, 0xe7, 0xc9, 0x16, 0x63,
	0xa7, 0x25, 0x23, 0xca, 0x20, 0xcf, 0x01, 0xd8, 0x3e, 0xbf, 0x49, 0x78, 0x78, 0x87, 0x81, 0xd3,
	0x76, 0x0d, 0xbf, 0x47, 0x2b, 0x1e, 0x42, 0xa0, 0x15, 0xb0, 0x9c, 0x39, 0x1d, 0x19, 0x91, 0x67,
	0xf2, 0x09, 0xc0, 0xfa, 0x38, 0x90, 0x63, 0xba, 0x86, 0x6f, 0x4f, 0x4e, 0x15, 0xe9, 0xe3, 0x72,
	0x52, 0x5a, 0x49, 0x22, 0x9f, 0x83, 0xa9, 0xa8, 0xce, 0x9c, 0xae, 0xdb, 0xf4, 0xed, 0xc9, 0x53,
	0x9d, 0xaf, 0x27, 0x1d, 0x2b, 0x81, 0xb2, 0x59, 0x9c, 0xf3, 0x03, 0x2d, 0x72, 0x47, 0x73, 0xe8,
	0x55, 0x03, 0x64, 0x00, 0xcd, 0x2d, 0x1e, 0x34, 0x21, 0xe2, 0x48, 0xce, 0xa0, 0x7d, 0xcb, 0x76,
	0x7b, 0x94, 0x6c, 0xd8, 0x93, 0xbe, 0x86, 0x55, 0xb7, 0xa8, 0x8a, 0x7d, 0xd5, 0x78, 0x65, 0x78,
	0xbf, 0xc2, 0xe9, 0x15, 0x8b, 0x83, 0x1d, 0xea, 0x8a, 0x17, 0x7c, 0x93, 0x91, 0x0f, 0x00, 0xb2,
	0x3c, 0xe1, 0x6c, 0x83, 0x2b, 0xcd, 0x73, 0x9f, 0x5a, 0xda, 0x33, 0x0f, 0x88, 0x0f, 0x26, 0x57,
	0xd9, 0x1a, 0xfe, 0xa4, 0xde, 0x35, 0x2d, 0xc2, 0xde, 0xdf, 0x06, 0x3c, 0x52, 0xf0, 0x9c, 0x62,
	0x96, 0x26, 0x71, 0x86, 0x4a, 0xe9, 0x6c, 0xbf, 0xcb, 0xd5, 0x56, 0x18, 0x72, 0x2b, 0x40, 0xb9,
	0xc4, 0x62, 0x88, 0xea, 0x3a, 0xa1, 0xdc, 0x27, 0x4b, 0x79, 0xc4, 0x4a, 0x15, 0xd4, 0x2b, 0x25,
	0x15, 0xf5, 0x5f, 0x97, 0x3c, 0xb6, 0x24, 0x8f, 0x67, 0xc5, 0xc0, 0xf5, 0xe2, 0x6f, 0x9f, 0xcf,
	0x08, 0x48, 0x8d, 0x4f, 0x8a, 0xe9, 0xee, 0x40, 0x26, 0xd0, 0xe5, 0xba, 0x05, 0x89, 0x6a, 0x4f,
	0x86, 0x0f, 0x37, 0x48, 0x8f, 0x79, 0xe4, 0x0c, 0x9a, 0xc8, 0xb9, 0x2e, 0x58, 0xec, 0x51, 0xf9,
	0x39, 0x52, 0x11, 0xf5, 0x7c, 0x38, 0x99, 0xc7, 0x61, 0x1e, 0xb2, 0x5d, 0x78, 0x87, 0x52, 0xbb,
	0x21, 0x74, 0x52, 0xc6, 0x59, 0x94, 0xc9, 0x42, 0x3d, 0xaa, 0x2d, 0xef, 0x0b, 0x78, 0x54, 0x66,
	0xaa, 0xae, 0x74, 0x05, 0xe3, 0x7f, 0x2b, 0xfc, 0x69, 0x80, 0xb5, 0xc0, 0x7c, 0x9f, 0x4a, 0xf4,
	0xa7, 0x60, 0x5d, 0xf3, 0x64, 0x8b, 0xbc, 0x5c, 0x8c, 0xae, 0x72, 0xcc, 0x03, 0xf2, 0x19, 0x74,
	0xa6, 0x49, 0xfc, 0x5b, 0x28, 0x44, 0x13, 0x22, 0x3c, 0xd3, 0x90, 0xc7, 0xeb, 0x63, 0x15, 0x56,
	0xec, 0xeb, 0x5c, 0xe2, 0x82, 0xad, 0x5f, 0xad, 0xe5, 0x72, 0x7e, 0xa9, 0x65, 0xad, 0xba, 0x46,
	0x5f, 0x82, 0x5d, 0xb9, 0xf8, 0x80, 0x3a, 0x8f, 0xab, 0xea, 0x58, 0x55, 0x39, 0x9e, 0x03, 0xc8,
	0xea, 0x6a, 0xe0, 0x41, 0x39, 0xb0, 0xa5, 0xa6, 0x7b, 0x01, 0x96, 0x78, 0xc0, 0x54, 0x98, 0x40,
	0xab, 0xf2, 0xb8, 0xc9, 0xb3, 0xe7, 0x43, 0xef, 0x27, 0xe4, 0x99, 0xf8, 0x70, 0x65, 0x8e, 0x03,
	0xe6, 0xad, 0xb2, 0x35, 0x4c, 0x61, 0x0a, 0xa8, 0xef, 0x59, 0x54, 0x42, 0x89, 0x27, 0x46, 0xe7,
	0xc8, 0xf3, 0x47, 0xe7, 0x00, 0x14, 0xf3, 0x3d, 0x8f, 0xe5, 0x96, 0xdb, 0x60, 0x2e, 0x96, 0xd3,
	0xe9, 0x6c, 0xb1, 0x18, 0xbc, 0x23, 0x8c, 0x6f, 0x2e, 0xe6, 0xdf, 0x2e, 0xe9, 0x6c, 0x60, 0x4c,
	0xfe, 0x68, 0x82, 0xf9, 0x46, 0x8d, 0x4f, 0x5e, 0x41, 0x7f, 0x21, 0x1f, 0xef, 0xe2, 0xe9, 0xeb,
	0x69, 0x4e, 0xe5, 0x13, 0x3e, 0x7a, 0x52, 0x30, 0x5c, 0xcd, 0x51, 0x1d, 0x5c, 0x42, 0xbf, 0xb6,
	0x88, 0xc4, 0xa9, 0x6d, 0x5c, 0xe5, 0x73, 0x3f, 0xa2, 0x3c, 0xb0, 0xb8, 0x1f, 0x82, 0x39, 0xdd,
	0x21, 0x8b, 0xf7, 0xe9, 0xbd, 0xca, 0x35, 0x8b, 0xbc, 0x84, 0xb6, 0xa4, 0x99, 0x0c, 0xee, 0x4b,
	0x3e, 0x3a, 0xad, 0x7a, 0x14, 0xe8, 0x6b, 0x80, 0x72, 0x15, 0xc9, 0x7b, 0x3a, 0xa1, 0xbe, 0xc7,
	0xa3, 0xe1, 0xbf, 0xdc, 0xea, 0xf2, 0x39, 0xb4, 0xe4, 0x5f, 0x4e, 0xbd, 0x9d, 0xa2, 0x6e, 0x29,
	0xe6, 0x4b, 0x30, 0xb5, 0x70, 0xf7, 0x52, 0xdf, 0xd5, 0x56, 0x4d, 0xd6, 0x73, 0x68, 0x09, 0xf1,
	0xfe, 0x03, 0xf5, 0xa8, 0xeb, 0x1b, 0xfb, 0xaa, 0xf1, 0xb3, 0x39, 0x7e, 0x2d, 0xdd, 0xd7, 0x1d,
	0xf9, 0xf3, 0xe9, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x13, 0xdf, 0x60, 0x26, 0x76, 0x07, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BackendClient is the client API for Backend service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackendClient interface {
	SchemaRequest(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SchemaRequestReply, error)
	// HandleRequest is used to handle a request and generate a response.
	// The plugins must check the operation type and handle appropriately.
	HandleRequest(ctx context.Context, in *HandleRequestArgs, opts ...grpc.CallOption) (*HandleRequestReply, error)
	Cleanup(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	// Setup is used to set up the backend based on the provided backend
	// configuration. The goplugin's setup implementation should use the provided
	// broker_id to create a connection for use with the Storage
	// and SystemView clients.
	Setup(ctx context.Context, in *SetupArgs, opts ...grpc.CallOption) (*SetupReply, error)
	// Initialize is invoked just after mounting a backend to allow it to
	// handle any initialization tasks that need to be performed.
	Initialize(ctx context.Context, in *InitializeArgs, opts ...grpc.CallOption) (*InitializeReply, error)
	// Type returns the BackendType for the particular backend
	Type(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TypeReply, error)
	Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionReply, error)
	Name(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NameReply, error)
}

type backendClient struct {
	cc grpc.ClientConnInterface
}

func NewBackendClient(cc grpc.ClientConnInterface) BackendClient {
	return &backendClient{cc}
}

func (c *backendClient) SchemaRequest(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*SchemaRequestReply, error) {
	out := new(SchemaRequestReply)
	err := c.cc.Invoke(ctx, "/proto.Backend/SchemaRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) HandleRequest(ctx context.Context, in *HandleRequestArgs, opts ...grpc.CallOption) (*HandleRequestReply, error) {
	out := new(HandleRequestReply)
	err := c.cc.Invoke(ctx, "/proto.Backend/HandleRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) Cleanup(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Backend/Cleanup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) Setup(ctx context.Context, in *SetupArgs, opts ...grpc.CallOption) (*SetupReply, error) {
	out := new(SetupReply)
	err := c.cc.Invoke(ctx, "/proto.Backend/Setup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) Initialize(ctx context.Context, in *InitializeArgs, opts ...grpc.CallOption) (*InitializeReply, error) {
	out := new(InitializeReply)
	err := c.cc.Invoke(ctx, "/proto.Backend/Initialize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) Type(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TypeReply, error) {
	out := new(TypeReply)
	err := c.cc.Invoke(ctx, "/proto.Backend/Type", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) Version(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*VersionReply, error) {
	out := new(VersionReply)
	err := c.cc.Invoke(ctx, "/proto.Backend/Version", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) Name(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*NameReply, error) {
	out := new(NameReply)
	err := c.cc.Invoke(ctx, "/proto.Backend/Name", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BackendServer is the server API for Backend service.
type BackendServer interface {
	SchemaRequest(context.Context, *Empty) (*SchemaRequestReply, error)
	// HandleRequest is used to handle a request and generate a response.
	// The plugins must check the operation type and handle appropriately.
	HandleRequest(context.Context, *HandleRequestArgs) (*HandleRequestReply, error)
	Cleanup(context.Context, *Empty) (*Empty, error)
	// Setup is used to set up the backend based on the provided backend
	// configuration. The goplugin's setup implementation should use the provided
	// broker_id to create a connection for use with the Storage
	// and SystemView clients.
	Setup(context.Context, *SetupArgs) (*SetupReply, error)
	// Initialize is invoked just after mounting a backend to allow it to
	// handle any initialization tasks that need to be performed.
	Initialize(context.Context, *InitializeArgs) (*InitializeReply, error)
	// Type returns the BackendType for the particular backend
	Type(context.Context, *Empty) (*TypeReply, error)
	Version(context.Context, *Empty) (*VersionReply, error)
	Name(context.Context, *Empty) (*NameReply, error)
}

// UnimplementedBackendServer can be embedded to have forward compatible implementations.
type UnimplementedBackendServer struct {
}

func (*UnimplementedBackendServer) SchemaRequest(ctx context.Context, req *Empty) (*SchemaRequestReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SchemaRequest not implemented")
}
func (*UnimplementedBackendServer) HandleRequest(ctx context.Context, req *HandleRequestArgs) (*HandleRequestReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleRequest not implemented")
}
func (*UnimplementedBackendServer) Cleanup(ctx context.Context, req *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Cleanup not implemented")
}
func (*UnimplementedBackendServer) Setup(ctx context.Context, req *SetupArgs) (*SetupReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Setup not implemented")
}
func (*UnimplementedBackendServer) Initialize(ctx context.Context, req *InitializeArgs) (*InitializeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Initialize not implemented")
}
func (*UnimplementedBackendServer) Type(ctx context.Context, req *Empty) (*TypeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Type not implemented")
}
func (*UnimplementedBackendServer) Version(ctx context.Context, req *Empty) (*VersionReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Version not implemented")
}
func (*UnimplementedBackendServer) Name(ctx context.Context, req *Empty) (*NameReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Name not implemented")
}

func RegisterBackendServer(s *grpc.Server, srv BackendServer) {
	s.RegisterService(&_Backend_serviceDesc, srv)
}

func _Backend_SchemaRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).SchemaRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Backend/SchemaRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).SchemaRequest(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_HandleRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HandleRequestArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).HandleRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Backend/HandleRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).HandleRequest(ctx, req.(*HandleRequestArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_Cleanup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).Cleanup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Backend/Cleanup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).Cleanup(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_Setup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).Setup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Backend/Setup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).Setup(ctx, req.(*SetupArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_Initialize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitializeArgs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).Initialize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Backend/Initialize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).Initialize(ctx, req.(*InitializeArgs))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_Type_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).Type(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Backend/Type",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).Type(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_Version_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).Version(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Backend/Version",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).Version(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_Name_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).Name(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Backend/Name",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).Name(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Backend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Backend",
	HandlerType: (*BackendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SchemaRequest",
			Handler:    _Backend_SchemaRequest_Handler,
		},
		{
			MethodName: "HandleRequest",
			Handler:    _Backend_HandleRequest_Handler,
		},
		{
			MethodName: "Cleanup",
			Handler:    _Backend_Cleanup_Handler,
		},
		{
			MethodName: "Setup",
			Handler:    _Backend_Setup_Handler,
		},
		{
			MethodName: "Initialize",
			Handler:    _Backend_Initialize_Handler,
		},
		{
			MethodName: "Type",
			Handler:    _Backend_Type_Handler,
		},
		{
			MethodName: "Version",
			Handler:    _Backend_Version_Handler,
		},
		{
			MethodName: "Name",
			Handler:    _Backend_Name_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend.proto",
}
